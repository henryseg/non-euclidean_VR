vec4 {{name}}_render(ExtVector v, RelVector normal, vec2 uv) {
    vec4 color0, color1;
    TransitionLocalWrapMaterial material = {{name}};

    {{^mat0.usesNormal}}
        {{^mat0.usesUVMap}}
            color0 = {{mat0.name}}_render(v);
        {{/mat0.usesUVMap}}
        {{#mat0.usesUVMap}}
            color0 = {{mat0.name}}_render(v, uv);
        {{/mat0.usesUVMap}}
    {{/mat0.usesNormal}}
    
    {{#mat0.usesNormal}}
        {{^mat0.usesUVMap}}
            color0 = {{mat0.name}}_render(v, normal);
        {{/mat0.usesUVMap}}
        {{#mat0.usesUVMap}}
            color0 = {{mat0.name}}_render(v, normal, uv);
        {{/mat0.usesUVMap}}
    {{/mat0.usesNormal}}

    {{^mat1.usesNormal}}
        {{^mat1.usesUVMap}}
            color1 = {{mat1.name}}_render(v);
        {{/mat1.usesUVMap}}
        {{#mat1.usesUVMap}}
            color1 = {{mat1.name}}_render(v, uv);
        {{/mat1.usesUVMap}}
    {{/mat1.usesNormal}}

    if(v.vector.cellBoost == material.cellBoost){
        {{#mat1.usesNormal}}
            {{^mat1.usesUVMap}}
                color1 = {{mat1.name}}_render(v, normal);
            {{/mat1.usesUVMap}}
            {{#mat1.usesUVMap}}
                color1 = {{mat1.name}}_render(v, normal, uv);
            {{/mat1.usesUVMap}}
        {{/mat1.usesNormal}}
    } else{
        color1 = color0;
    }

    return (1. - material.ratio) * color0 + material.ratio * color1;
}

